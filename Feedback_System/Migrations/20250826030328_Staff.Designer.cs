// <auto-generated />
using System;
using Feedback_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Feedback_System.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250826030328_Staff")]
    partial class Staff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Feedback_System.Model.Groups", b =>
                {
                    b.Property<int>("group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("group_id"));

                    b.Property<int>("group_count")
                        .HasColumnType("int");

                    b.Property<string>("group_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("group_id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Feedback_System.Model.Staff", b =>
                {
                    b.Property<int>("staff_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staff_id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("group_id")
                        .HasColumnType("int");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("login_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("staffrole_id")
                        .HasColumnType("int");

                    b.HasKey("staff_id");

                    b.HasIndex("group_id");

                    b.HasIndex("staffrole_id");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Feedback_System.Model.Staffroles", b =>
                {
                    b.Property<int>("staffrole_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staffrole_id"));

                    b.Property<string>("staffrole_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("staffrole_id");

                    b.ToTable("Staffroles");
                });

            modelBuilder.Entity("Feedback_System.Model.Staff", b =>
                {
                    b.HasOne("Feedback_System.Model.Groups", "Groups")
                        .WithMany()
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Feedback_System.Model.Staffroles", "Staffroles")
                        .WithMany()
                        .HasForeignKey("staffrole_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("Staffroles");
                });
#pragma warning restore 612, 618
        }
    }
}
